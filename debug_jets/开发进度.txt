To Do：Main functions

-Jet：感觉很需要实时语音识别（教练时实时显示）
应用：教练/会议实时字幕

实时语音转写：
华为云 1元1年 https://support.huaweicloud.com/sdkreference-sis/sis_05_0053.html
讯飞： 免费包 24小时， 15天有效 https://www.xfyun.cn/services/rtasr
示例下载： http://xfyun-doc.ufile.ucloud.com.cn/1590028142632068/rtasr_python3_demo.zip

pip install setuptools
pip install requests
pip install websocket-client


-导入mp4， 抽离出mp3/wav
-录制wav, 直接转写（或改用实时转写功能，实时增加，需要在讯飞购买相应的服务）

-左右两栏同步显示（根据时间戳）
IMPT: 必须修改：在右侧显示多行时，编辑时只显示一行，用别的控件来显示？

-增加统计信息的函数：（之前的统计函数在convert_data函数中）
--如果用户编辑了ICF格式的文本，那么统计信息应该根据这个来调整！！！

一人讲话： to do later
转写对话框(利用已经有的，To do :以后可以复制，改编成别的）
显示：按一人讲话（只需两列）
编辑之后：保存：保存按钮

-当切换了教练/客户之后，左下角table在刷新费时，有时要近一分钟！！！可能是table widget的问题
---解决办法：用分页显示（to do )
=====================================
严重bug: to fix
教练或客户交换说话中间的安静时间


=====================================
严重bug: 第二次导入raw文件，就会假死！
可能是因数据多，反应慢。
to do 解决办法： 还是不要一次显示全部内容！（分页显示）
=====================================

严重Bug:转换教练/客户之后，
统计信息显示有问题！
=====================================
---用户可以往里添加讯飞转写常见错误编辑选项（表格->dict->binary存储）
严重Bug: 转写过程中，等时间4分钟以上程序会自动退出，提示如下：
/getProgress 成功:{'data': '{"status":3,"desc":"音频转写中"}', 'err_no': 0, 'failed': None, 'ok': 0}
Process finished with exit code -1073741571 (0xC00000FD)
（网上查不到相关资料！）

***
临时解决办法：
先调用JetsXunfeiApi.py,把mp3文件名写到main()里， 命令行模式运行，转写成raw.txt
再运行GUI，转成ICF格式。

多次尝试， 2/3的可能会在转写过程中退出程序， 1/3会成功
可能是：PyQt多线程的问题！

核心含义是以一条线程 管理着线程池，线程池再统一管理着其他线程。
可能Python PyQt5本身有关，他们自身本质是不存在多线程概念的，绕不开GIL的坑。解决办法为
以一条线程 管理着线程池，线程池再统一管理着其他线程。代码实现为最后一副代码。或参照
https://blog.csdn.net/qq_40658762/article/details/104879919


=====================================================================
08/08
因为安装了别的pip, 运行出错：requests

解决办法：pip install -U requests --usee-feature=2020-resolver

=====================================================================
7/25
fix bug: 时长统计：全部时长：多了一倍！
原因：重复调用了两次函数transform_tool.def convert_2speakers_rawtxt(raw_txt_file):
其中的4个全局变量并未归零，导致重复计算
    global speaker1_time
    global speaker2_time
    global speaker1_quiet_time
    global speaker2_quiet_time
解决办法：
   1、只调用一次函数，提升运行效率
   2、保险起见，每次归零以上全局变量

fix bug: 切勿教练/客户之后，从内存刷新显示
=====================================================================
7/24
word格式抽出函数写到jet_docx.py中
改写调用的函数
添加：transform_tool.py中
#从指定的icf_list, icf_stat_list, 转写到指定的word文档
def save_icf_list_to_word(icf_list, icf_stat_list, file_name):
=====================================================================
7/22
--大Bug： 字数统计与Word相差很大，多了近千字！
Debug: def count_zh_chars(s): in  transform_tool.py
已经修复：重新从self.icf_stat_list里获取教练和客户的文字（包括用户可能做的修改），重新统计
=====================================================================
7/20
fix bug: 合并同一位讲话者时，最后多了一条
用户切换教练/客户时，左边tableview更新显示很慢，近千条数据需要三四十秒钟！
原因：可能跟我的算法有关，更可能跟tableview有关，
解决办法：
to do : 后续：用分页显示
=====================================================================
7/10
一人讲话（讲章）录音转写：
-从原始txt转换数据格式为：时间戳
-以指定秒数为间隔，按段落起止时间戳显示
-保存为txt/word格式

原始转写txt:
1、判断讲话者为1位
2、起止时间
3、content
另存为txt文件
只保留文字（不包括时间戳）-另存到txt

转写：
A.原始
B.合并断句：判断安静的时间（变量，可由用户设置，默认

=====================================================================

7/9
-删除不必要的按钮，简化操作，一步到位，选择raw txt，就把ICF格式及统计数据显示出来
-选择右侧ICF格式时，也可播放起始时间的语音文件
-添加按钮：批量编辑原始文字（例如感叹词）：
--调用transform_tool.py中的 def edit_common_error(text):
-添加：可选择：只保留教练文字（只显示教练文字到下方table widget),再保存到txt/word

=====================================================================
7/8
-输出为ICF Word格式
-自动添加页码： 第1/n页
=====================================================================
7/7
VLC播放mp3和wav的时间有误差
wav时间戳更准确， mp3没谱（应该是VLC的问题！！！）
上传到讯飞时可以用mp3,时间戳没问题。
解决方案：播放时只支持wav, 不支持mp3

ICF格式转写到txt（可选是否有统计信息）
===================================================================================================
07/04
-保存ICF格式（Radio Btn可选：+统计信息）到binary/txt/word格式
-增加用户编辑icf Table Widget内容之后的保存功能（到数据字典）到binary文件中
    timestamp_dict = {
        "speak_time":"01:21-01:25",
        "speaker": "教练/客户",
        "content": "what the speaker says"
    }
-OK: 增加：从之前保存的icf binary文件读取数据字典列表到icf Table widget中
-OK:表格显示：
--字体大小设置
--隔行：不同的颜色区分（教练/客户）

===================================================================================================
07-03
-OK添加功能：右下一table widget显示 def convert_raw2icf_format_list返回的结果
--用户可以编辑
--OK: 根据内容调整item行高-自适应， 用setSectionResizeMode()
--OK:左边显示起止时间戳
---OK:播放音频的时间相应需要修改为取开始的时间！
---OK: 修改：左边时间戳只显示和播放，不能修改！
   self.tableWidget_raw.setEditTriggers(QAbstractItemView.NoEditTriggers)
-OK: 显示教练统计信息，右下二Table Widget
ok-添加按钮： 导入原始转写txt文件，显示时间戳数据到表格控件
ok-添加按钮：从编辑后的时间戳（从table widget中提取），
-转写成ICF格式（同一讲话者的合并在一起）-,从原始raw中获取，加上安静的时间戳到字典中


===================================================================================================
07-02
-改用VLC播放音频
--添加监听事件：当改变播放时间时，改变进度条.
--能凑合使用了。
--Fixed Bug: 播放按钮的图标有点问题，显示需要调整
--fixedBug:进度条不能拖动！

-OK: 转写成ICF格式（同一讲话者的合并在一起）-(只能从原始raw中获取，修改，包含安静的时间）
--改写：  convert_data
---fix bug: 返回的list值（之前有误）
---修改，包含安静的时间
--def convert_raw2icf_format_list(raw_txt_file, coach="speaker1"):

"""
改用VLC播放：
按选定的时间播放
---解决方案： python3 用python-vlc 调用VLC 播放流媒体 包括pyqt5嵌入
    pip3 install python-vlc
测验成功
--问题：有误差，实测：
VLC播放器

06:20 播放的内容，是raw转写05:52的内容，前者在此多出近30秒

29:39-〉28:37 相差62'
54:55->54:38  相差17'
58:22->58:19  相差3'
41:16-〉40:43 相差33'   “第二个其实也是第一个”
小结规律：头尾相差小，中间相差最大

--此规律观测！很可能是vlc底层算法set_time的问题！！
--另一个可能的Bug，讯飞转写过程中时间戳有问题！！！
----排除此可能性，因为只用VLC播放器和讯飞转写的文字是对应的，没问题。

结论：误差大，又是动态的，无法使用！！！
---那就没必要做这个了：增加从raw提取：毫秒数

---参考：讯飞转写网站，看是用的什么插件，是能精确匹配的！
可能的解决方案：不用python调用声音播放，用网页形式调用插件。

"""
===================================================================================================
07-01
-调整按钮的位置到上方 -OK
-播放/暂停音频（改用QMediaPlayer:支持mp3, mp4, wav) -OK
--Bug，可能是从raw转写到时间戳的过程，文字数据有丢失！！！Fixed! OK
    Fixed Bug in transfomr2timerstamp_txt_word.py
    def edit_common_error (把带"嗯"的句子缩短为只有“嗯”了）

--按选定的时间播放 (Bug: position返回的值很奇怪，不稳定，不可靠！)
---很可能是底层C++ API的问题！！！如果是这样就没办法了！
    这个帖子https://forum.qt.io/topic/106060/qmediaplayer-out-of-sync/2
    说明了C++调用时类似的情况，证实了！

---问题：设置的位置似乎是晚了一步！


06-30
-raw文件转写成时间戳dict list文件
-UI添加导入的按钮...
-从时间戳文件导入数据，显示时间戳数据到表格控件 (成功）
-保存编辑后的数据到时间戳二进制（成功）
--从保存编辑后的时间戳二进制文件读入，显示（有Bug)

========================================================================================================================
06/29
--解决问题：显示转写界面时，多显示了一个空白的对话框，然后程序死等！
---方案：ConvertDialog基类从Qwidget改为QDialog, 删除__init__()中的.show(), 改用.exec_() #模式窗口
-Fix Bug in JetsXunfeiApi.py def convert_2speakers_audio_to_text_with_gui
--添加与进度条更新有关的内容，100%
--修改进度UI中button的显示，转写过程中禁用，转写完成，改为“退出”提示，恢复使用


========================================================================================================================

0628:
-恢复到2020-0624-不小心误操作
-添加：Jets Project File_readme.txt (说明源文件之间的关系）
-添加radiobutton 1speaker or 2speakers to UI,添加相应的程序
--问题：显示转写界面时，多显示了一个空白的对话框，然后程序死等！

========================================================================================================================

2020-0619 实现GUI调用讯飞，能在调用完成之后才在UI显示信息

用原始转写结果：
转成带时间戳的原始文本（分成教练和客户），
再转成ICF格式的txt/word


